// <auto-generated />
using System;
using Arbeitszeiterfassung.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Arbeitszeiterfassung.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.Aenderungsprotokoll", b =>
                {
                    b.Property<int>("AenderungsprotokollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AenderungsprotokollId"));

                    b.Property<int>("Aktion")
                        .HasColumnType("int");

                    b.Property<bool>("Aktiv")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("ErstelltAm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GeaendertAm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GeaendertVon")
                        .HasColumnType("longtext");

                    b.Property<bool>("Genehmigt")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Grund")
                        .HasColumnType("int");

                    b.Property<string>("GrundText")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("AenderungsprotokollId");

                    b.ToTable("Aenderungsprotokolle");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.AppRessource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktiv")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("Daten")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<DateTime>("ErstelltAm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GeaendertAm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GeaendertVon")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LetzteAktualisierung")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("AppRessourcen");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.Arbeitszeit", b =>
                {
                    b.Property<int>("ArbeitszeitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ArbeitszeitId"));

                    b.Property<bool>("Aktiv")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("BenutzerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ErstelltAm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GeaendertAm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GeaendertVon")
                        .HasColumnType("longtext");

                    b.Property<bool>("IstOfflineErfasst")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IstSynchronisiert")
                        .HasColumnType("tinyint(1)");

                    b.Property<TimeSpan>("Pause")
                        .HasColumnType("time(6)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Stopp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ArbeitszeitId");

                    b.HasIndex("BenutzerId");

                    b.HasIndex("Start");

                    b.ToTable("Arbeitszeiten");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.Benutzer", b =>
                {
                    b.Property<int>("BenutzerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BenutzerId"));

                    b.Property<bool>("Aktiv")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("ErstelltAm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GeaendertAm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GeaendertVon")
                        .HasColumnType("longtext");

                    b.Property<string>("Nachname")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("RolleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Vorname")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("BenutzerId");

                    b.HasIndex("RolleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Benutzer");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.BenutzerStandort", b =>
                {
                    b.Property<int>("BenutzerId")
                        .HasColumnType("int");

                    b.Property<int>("StandortId")
                        .HasColumnType("int");

                    b.Property<bool>("Aktiv")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ErstelltAm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GeaendertAm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GeaendertVon")
                        .HasColumnType("longtext");

                    b.Property<bool>("IstHauptstandort")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ZugewiesenAm")
                        .HasColumnType("datetime(6)");

                    b.HasKey("BenutzerId", "StandortId");

                    b.HasIndex("StandortId");

                    b.ToTable("BenutzerStandorte");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.Rolle", b =>
                {
                    b.Property<int>("RolleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RolleId"));

                    b.Property<bool>("Aktiv")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Berechtigungsstufe")
                        .HasColumnType("int");

                    b.Property<string>("Beschreibung")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("ErstelltAm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GeaendertAm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GeaendertVon")
                        .HasColumnType("longtext");

                    b.HasKey("RolleId");

                    b.ToTable("Rollen");

                    b.HasData(
                        new
                        {
                            RolleId = 1,
                            Aktiv = true,
                            Berechtigungsstufe = 5,
                            Beschreibung = "Administrator",
                            Bezeichnung = "Admin",
                            ErstelltAm = new DateTime(2025, 6, 24, 14, 16, 48, 318, DateTimeKind.Utc).AddTicks(5888)
                        },
                        new
                        {
                            RolleId = 2,
                            Aktiv = true,
                            Berechtigungsstufe = 1,
                            Beschreibung = "Standardbenutzer",
                            Bezeichnung = "Mitarbeiter",
                            ErstelltAm = new DateTime(2025, 6, 24, 14, 16, 48, 318, DateTimeKind.Utc).AddTicks(5900)
                        },
                        new
                        {
                            RolleId = 3,
                            Aktiv = true,
                            Berechtigungsstufe = 3,
                            Beschreibung = "Teamleitung",
                            Bezeichnung = "Manager",
                            ErstelltAm = new DateTime(2025, 6, 24, 14, 16, 48, 318, DateTimeKind.Utc).AddTicks(5903)
                        });
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.Stammdaten", b =>
                {
                    b.Property<int>("StammdatenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StammdatenId"));

                    b.Property<bool>("Aktiv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ArbeitstagDi")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ArbeitstagDo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ArbeitstagFr")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ArbeitstagMi")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ArbeitstagMo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("BenutzerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ErstelltAm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GeaendertAm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GeaendertVon")
                        .HasColumnType("longtext");

                    b.Property<bool>("HomeOfficeErlaubt")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Wochenarbeitszeit")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("StammdatenId");

                    b.HasIndex("BenutzerId")
                        .IsUnique();

                    b.ToTable("Stammdaten");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.Standort", b =>
                {
                    b.Property<int>("StandortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StandortId"));

                    b.Property<string>("Adresse")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Aktiv")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("ErstelltAm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GeaendertAm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GeaendertVon")
                        .HasColumnType("longtext");

                    b.Property<string>("IPRangeEnd")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IPRangeStart")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("StandortId");

                    b.ToTable("Standorte");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.Systemeinstellung", b =>
                {
                    b.Property<int>("SystemeinstellungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SystemeinstellungId"));

                    b.Property<bool>("Aktiv")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ErstelltAm")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GeaendertAm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GeaendertVon")
                        .HasColumnType("longtext");

                    b.Property<string>("Schluessel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Typ")
                        .HasColumnType("int");

                    b.Property<bool?>("WertBoolean")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("WertJson")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("WertNumber")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("WertString")
                        .HasColumnType("longtext");

                    b.HasKey("SystemeinstellungId");

                    b.ToTable("Systemeinstellungen");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.Arbeitszeit", b =>
                {
                    b.HasOne("Arbeitszeiterfassung.DAL.Models.Benutzer", "Benutzer")
                        .WithMany("Arbeitszeiten")
                        .HasForeignKey("BenutzerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Benutzer");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.Benutzer", b =>
                {
                    b.HasOne("Arbeitszeiterfassung.DAL.Models.Rolle", "Rolle")
                        .WithMany("Benutzer")
                        .HasForeignKey("RolleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rolle");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.BenutzerStandort", b =>
                {
                    b.HasOne("Arbeitszeiterfassung.DAL.Models.Benutzer", "Benutzer")
                        .WithMany("BenutzerStandorte")
                        .HasForeignKey("BenutzerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arbeitszeiterfassung.DAL.Models.Standort", "Standort")
                        .WithMany("BenutzerStandorte")
                        .HasForeignKey("StandortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Benutzer");

                    b.Navigation("Standort");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.Stammdaten", b =>
                {
                    b.HasOne("Arbeitszeiterfassung.DAL.Models.Benutzer", "Benutzer")
                        .WithOne("Stammdaten")
                        .HasForeignKey("Arbeitszeiterfassung.DAL.Models.Stammdaten", "BenutzerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Benutzer");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.Benutzer", b =>
                {
                    b.Navigation("Arbeitszeiten");

                    b.Navigation("BenutzerStandorte");

                    b.Navigation("Stammdaten");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.Rolle", b =>
                {
                    b.Navigation("Benutzer");
                });

            modelBuilder.Entity("Arbeitszeiterfassung.DAL.Models.Standort", b =>
                {
                    b.Navigation("BenutzerStandorte");
                });
#pragma warning restore 612, 618
        }
    }
}
